#!/usr/bin/perl
# Usage: make_cal_cache
# By Thomas Beutel for Coaches Training Institute

use strict;

use DBI;
use Template;
use List::Util qw(sum min max reduce);
use Date::Manip;
#use Smart::Comments;
use vars qw( $dbh $index_template $grid_template );

#-------------------------- Setup -----------------------

# Database	    
$dbh = DBI->connect("DBI:mysql:CTIDATABASE",'cticoaches','');

# Templates
$index_template = q{
<div id="[% country_id %]" style="width:230px;">
  <h2>[% country %]</h2>
  <ul class="bulleted-arrowed">
[% FOREACH r = regions %] 
    <li><a href="#[% r.region_code %]" class="onpage">[% r.region_name %]</a></li>
[% END %]
  </ul>
</div>
};

$grid_template = q{
<p style="margin-bottom:-20px;">For additional dates please contact a Program Advisor at 800-691-6008 x703</p>
<table id="[% region.region_code %]">
  <caption>[% region.region_name %]<br />[% region.region_extra %]</caption>
  <colgroup span="1" class="firstcol" />
  <colgroup span="9" class="othercol" />
  <thead>
    <tr><th>Course</th><th colspan="9">Dates <span class="tip">(select a date below for venue information)&nbsp;&nbsp;<a href="#times" style="color:#479;text-decoration:none;" onmouseover="this.style.color='#69b';" onmouseout="this.style.color='#479';"><b>Course Times</b> (see above)</a></span></th></tr>
  </thead>
  <tbody>
    <tr>
      <td class="fc"><a href="/coach-training/courses/#course_fundamentals">Fundamentals</a></td>
[% FOREACH n = [ 0 .. 7 ] %]
      <td><a target="_blank" href="[% grid.$n.4.booking_link %]">[% grid.$n.4.date %]</a>
[% IF grid.$n.4.midweek == 1 %]
<span style="color:#d00;">Midweek series</span>
[% END %]
[% IF grid.$n.4.weekend == 1 %]
<span style="color:#d00;">Weekend</span>
[% END %]
     </td>
[% END %]
    </tr>
    <tr class="altrow">
      <td class="fc"><a href="/coach-training/courses/#course_fulfillment">Fulfillment</a></td>
[% FOREACH n = [ 0 .. 7 ] %]
      <td><a target="_blank" href="[% grid.$n.3.booking_link %]">[% grid.$n.3.date %]</a>&nbsp;</td>
[% END %]
    </tr>
    <tr>
      <td class="fc"><a href="/coach-training/courses/#course_balance">Balance</a></td>
[% FOREACH n = [ 0 .. 7 ] %]
      <td><a target="_blank" href="[% grid.$n.2.booking_link %]">[% grid.$n.2.date %]</a>&nbsp;</td>
[% END %]
    </tr>
    <tr class="altrow">
      <td class="fc"><a href="/coach-training/courses/#course_process">Process</a></td>
[% FOREACH n = [ 0 .. 7 ] %]
      <td><a target="_blank" href="[% grid.$n.1.booking_link %]">[% grid.$n.1.date %]</a>&nbsp;</td>
[% END %]
    </tr>
    <tr>
      <td class="fc"><a href="/coach-training/courses/#course_inthebones">In the Bones</a></td>
[% FOREACH n = [ 0 .. 7 ] %]
      <td><a target="_blank" href="[% grid.$n.0.booking_link %]">[% grid.$n.0.date %]</a>&nbsp;</td>
[% END %]
    </tr>
  </tbody>
</table>
<div class="lodgeinfo"><!-- <a href="">Click here for more venue and lodging information</a> --></div>
};

#-------------------------- Create HTML -----------------------


# create the HTML for the given countries
my @countries = ( 'United States', 'Canada' );
my $index_html = reduce { $a . $b } map { make_index_html($_) } @countries;
my $grid_html  = reduce { $a . $b } map { make_grid_html($_)  } @countries;


# store the INDEX and GRID HTML's
$dbh->do('UPDATE calendar_cache set idx=?, html=?, created=now() where id=6',undef,$index_html,$grid_html);

exit;

#-------------------------- Iteration subroutines -------------------

sub Iterator (&) { return $_[0] }  # syntactic sugar for iterators

sub make_index_html {
  my ($country) = @_;
  my $html = '';
  my $regions = [ ];

  # get regions for this country, with course count > 0
  my $region_it = make_region_iterator($country, 
                                       sub { region_course_count($_[0]) > 0 }
                                     );

  while ( my $region = $region_it->() ) {
    # BUSINESS RULE EXCEPTION: skip if fast track, '0' means FT
    # next if ($region->{region_code} =~ m/ \A 0 /xms);

    push(@$regions, $region);
  }

  # make country_id as lower case and subsitute spaces with dashes
  my $country_id = lc $country;
  $country_id =~ s/ [ ] /-/gxms;

  my $template = Template->new();

  my $vars = {
    country    => $country,
    country_id => $country_id,
    regions    => $regions,
  };

  $template->process(\$index_template,$vars,\$html);

  ### $html
  return $html;
}


sub make_grid_html {
  my ($country) = @_;
  my $html = '';

  my $region_it = make_region_iterator($country, 
                                       sub { region_course_count($_[0]) > 0 }
                                     );

  my $template = Template->new();
  
  while( my $region = $region_it->() ){
    my $series_it = make_series_iterator($region);
    my @grid;
    while ( my $series = $series_it->() ) {
      push(@grid,$series);
    }

    my @grid_sorted = sort by_series_dates @grid;

#    # BUSINESS RULE EXCEPTION: rename for fast track
#    if ($region->{region_code} eq 'ORL' 
#        or $region->{region_code} =~ m/ FT \z /xms) {
#      $region->{region_name} .= '&nbsp;&nbsp;&nbsp;<b style="font-size:80%;color:#a00;">FAST TRACK</b>';
#    }

    my $vars = {
      region => $region,
      grid   => \@grid_sorted,
    };

    $template->process(\$grid_template,$vars,\$html);
  }

### $html

  return $html;
}


sub make_series_iterator {
  my ($region) = @_;

  ### series_iterator: $region

  # BUSINESS RULE EXCEPTION: return SF fast track dates if '0SR'
  # (change this to 0SRxxx to turn off)
  if ($region->{region_code} eq 'SRFTxxx') {
    my $series = [
  # the following was retrieved by turning smart comments on
           {
             assistant_count => '0',
             assistant_wait_count => '0',
             booking_link => 'http://www.thecoaches.com/pdfs/SR-CTI.pdf',
             call_time => 'Fast Track',
             course_type_id => 7,
             date => '05/14/2010',
             day_of_week => 'Friday',
             end_date => undef,
             end_date_formatted => undef,
             event => 'In The Bones',
             fmid => '14681',
             id => '3641',
             location => 'SR-TBA',
             pod_name => '0',
             region => 'SR',
             series_id => '0',
             start_date => '2010-05-14 00:00:00',
             start_date_formatted => 'May 14, 2010',
             student_count => '0',
             total => '0'
           },
           {
             assistant_count => '0',
             assistant_wait_count => '0',
             booking_link => 'http://www.thecoaches.com/pdfs/SR-CTI.pdf',
             call_time => 'MIDWEEK/Fast Track',
             course_type_id => 6,
             date => '04/13/2010',
             day_of_week => 'Tuesday',
             end_date => undef,
             end_date_formatted => undef,
             event => 'Process',
             fmid => '14705',
             id => '3643',
             location => 'SR-TBA',
             pod_name => '0',
             region => 'SR',
             series_id => '0',
             start_date => '2010-04-13 00:00:00',
             start_date_formatted => 'April 13, 2010',
             student_count => '0',
             total => '0'
           },
           {
             assistant_count => '0',
             assistant_wait_count => '0',
             booking_link => 'http://www.thecoaches.com/pdfs/SR-BW.pdf',
             call_time => 'Fast Track',
             course_type_id => 5,
             date => '04/09/2010',
             day_of_week => 'Friday',
             end_date => undef,
             end_date_formatted => undef,
             event => 'Balance',
             fmid => '14706',
             id => '3644',
             location => 'SR-TBA',
             pod_name => '0',
             region => 'SR',
             series_id => '0',
             start_date => '2010-04-09 00:00:00',
             start_date_formatted => 'April  9, 2010',
             student_count => '0',
             total => '0'
           },

    ];
    my @array = ( $series ); 
    return Iterator {
      return shift @array;
    }
  }

  my $course_it = make_course_iterator($region);  
  return Iterator {
    return undef if $course_it->('exhausted?');
    my $series = [
      $course_it->('itb'),
      $course_it->('pro'),
      $course_it->('bal'),
      $course_it->('ful'),
      $course_it->('fun'),
    ];
### series: $series
    return $series;
  };
}

sub make_region_iterator {
  my ($country,$filter) = @_;
  my $regions = $dbh->selectall_arrayref('SELECT region_code,region_name FROM regions WHERE country=?',{Columns=>{}},$country);

  my @regions = grep { $filter->($_) } @$regions;
 
  # BUSINESS RULE EXCEPTION: add SF fast track
  # uncomment the following, and add the series above in make_series_iterator

  if ($country eq 'United States') {  
 #   push(@regions,{ 
 #     region_code => 'SRFT',
 #     region_name => 'San Francisco Bay Area, CA ',
 #   });
    push(@regions,{ 
      region_code => 'SCOC',
      region_name => 'Orange County, CA ',
    });
    push(@regions,{ 
      region_code => 'SCLA',
      region_name => 'Los Angeles, CA ',
    });
  }


  # BUSINESS RULE EXCEPTION: make Esalen sort after San Rafael
  @regions = map { 
    $_->{region_name} = 'San Francisco Bay Area<br />&nbsp;&nbsp;Esalen Institute, Big Sur, CA' if $_->{region_code} eq 'Esalen';

    # ===============================  put Brigitte's city notifications here ===============================
    #$_->{region_extra} = '<span style="color:#d00;">Due to the 2010 Winter Olympics in Vancouver, our Fulfillment course will be held in Seattle, WA.</span>' if $_->{region_code} eq 'VAN';
    #$_->{region_extra} = '<span style="color:#d00;">New Co-active Coaching Course in Montreal</span>' if $_->{region_code} eq 'MON';
    $_ } @regions;
  

  # sort by region name: compare region_name (or region_code if names equal)
  @regions = sort { $a->{region_name} eq $b->{region_name} 
                      ? $a->{region_code} cmp $b->{region_code}
                      : $a->{region_name} cmp $b->{region_name} } @regions;

  return Iterator {
    return shift @regions;
  };
}

sub make_course_iterator {
  my ($region) = @_;
  # courses for this region in reverse start_date order

  my $region_code = $region->{region_code}; 

  # exceptions
#  if($region_code eq 'SRFT') {
#    $region_code = 'SR';
#  }

  my $courses1 =  $dbh->selectall_arrayref('SELECT * from event_calendar where fmid!=15745 AND region=? and TO_DAYS(start_date)-TO_DAYS(now())> 0 and (course_type_id=3 OR course_type_id=4 OR course_type_id=5 OR course_type_id=6 OR course_type_id=7) ORDER BY start_date DESC',{Columns=>{}},$region_code);


  # exceptions

  if($region_code eq 'SCOC') {
    $region_code = 'SC';
    $courses1 =  $dbh->selectall_arrayref("SELECT * from event_calendar where fmid!=15745 AND region=? AND location LIKE 'OC%' and TO_DAYS(start_date)-TO_DAYS(now())> 0 and (course_type_id=3 OR course_type_id=4 OR course_type_id=5 OR course_type_id=6 OR course_type_id=7) ORDER BY start_date DESC",{Columns=>{}},$region_code);
  }
  if($region_code eq 'SCLA') {
    $region_code = 'SC';
    $courses1 =  $dbh->selectall_arrayref("SELECT * from event_calendar where fmid!=15745 AND region=? AND location LIKE 'LA%' and TO_DAYS(start_date)-TO_DAYS(now())> 0 and (course_type_id=3 OR course_type_id=4 OR course_type_id=5 OR course_type_id=6 OR course_type_id=7) ORDER BY start_date DESC",{Columns=>{}},$region_code);
  }


  my $courses = [ ];

  if ($region->{region_code} =~ m/FT$/) {  # i.e. 'SRFT'
    #allow only fasttrack courses
    foreach my $course (@$courses1) {
      if ($course->{call_time} =~ m/fast/i) {
        push(@$courses,$course);
      }
    }
  }
  else {
    #allow only non-fasttrack courses
    foreach my $course (@$courses1) {
      if ($course->{call_time} !~ m/fast/i) {
        push(@$courses,$course);
      }
    }
  }

  # iterator returns courses in order of itb, pro, bal, ful, fun, 
  # in reverse date order

  my %types = (
    fun => 3,
    ful => 4,
    bal => 5,
    pro => 6,
    itb => 7,
  );

  my $date = '2040-01-01 00:00:00';

  return Iterator { # return the farthest course of type "$type"
    my $type = shift;
    # exhausted test
    if ($type eq 'exhausted?') {
      if (@$courses){
        my @temp = map { [$_->{event},$_->{date}] } @$courses;
        ### courses not exhausted: @temp
        $date = '2040-01-01 00:00:00';
        return 0; # not empty
      }
      return 1; # empty
    }
    ### $type
    my $course 
      = extract($courses,
                sub { # match type and make sure date is earlier
                  $_[0]->{course_type_id} == $types{$type}
                  and
                  Date_Cmp( ParseDate($date),ParseDate($_[0]->{start_date}) )>0
                }
              );
    if($course){

      # BUSINESS RULE EXCEPTION = mark midweek or weekend for SR FUND courses
      #if ( $course->{region} eq 'SR' and $course->{course_type_id} == 3 ) {
      if ( $course->{region} eq 'SR' ) {
        if ( $course->{day_of_week} eq 'Friday' ){
          #$course->{weekend} = 1;
        }
        else {
          $course->{midweek} = 1;
        }
      }
      

      $date = $course->{start_date};
      return $course;
    }
    return undef;
  };
}

sub extract {
  my ($arrayref,$match) = @_;
  foreach (0..$#$arrayref) {
    #my $exclude = 0;
    #foreach my $fmid (@$excludes) {
    #  $exclude = 1 if ($arrayref->[$_]->{fmid} == $fmid); 
    #}
    if ( $match->($arrayref->[$_])) {
      return splice (@$arrayref,$_,1);
    }
  }
  return undef;
}

sub by_series_dates { # series sorter
  Date_Cmp(ParseDate($a->[4]->{start_date}),ParseDate($b->[4]->{start_date}))
  || Date_Cmp(ParseDate($a->[3]->{start_date}),ParseDate($b->[3]->{start_date}))
  || Date_Cmp(ParseDate($a->[2]->{start_date}),ParseDate($b->[2]->{start_date}))
  || Date_Cmp(ParseDate($a->[1]->{start_date}),ParseDate($b->[1]->{start_date}))
  || Date_Cmp(ParseDate($a->[0]->{start_date}),ParseDate($b->[0]->{start_date}))
}

sub region_course_count {
  my ($region) = @_;
  my ($count) = $dbh->selectrow_array('SELECT count(id) from event_calendar where region=? and TO_DAYS(start_date)-TO_DAYS(now())> 0 and (course_type_id=3 OR course_type_id=4 OR course_type_id=5 OR course_type_id=6 OR course_type_id=7) ORDER BY start_date DESC',{Columns=>{}},$region->{region_code});
  ### region: $region
  ### count: $count
  return $count;
}

__DATA__
