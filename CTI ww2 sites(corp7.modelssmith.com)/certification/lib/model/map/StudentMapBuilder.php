<?php


/**
 * This class adds structure of 'student' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Jul 21 18:09:46 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class StudentMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.StudentMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(StudentPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(StudentPeer::TABLE_NAME);
		$tMap->setPhpName('Student');
		$tMap->setClassname('Student');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addForeignKey('PROFILE_ID', 'ProfileId', 'INTEGER', 'profile', 'ID', false, null);

		$tMap->addColumn('FM_ID', 'FmId', 'INTEGER', false, null);

		$tMap->addColumn('NAME', 'Name', 'VARCHAR', false, 100);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 100);

		$tMap->addColumn('LEVEL', 'Level', 'INTEGER', false, null);

		$tMap->addColumn('LAST_ACTIVITY', 'LastActivity', 'DATE', false, null);

		$tMap->addColumn('IN_THE_BONES_DATE', 'InTheBonesDate', 'DATE', false, null);

		$tMap->addColumn('COURSE_FUNDAMENTALS', 'CourseFundamentals', 'VARCHAR', false, 25);

		$tMap->addColumn('COURSE_FULFILLMENT', 'CourseFulfillment', 'VARCHAR', false, 25);

		$tMap->addColumn('COURSE_BALANCE', 'CourseBalance', 'VARCHAR', false, 25);

		$tMap->addColumn('COURSE_PROCESS', 'CourseProcess', 'VARCHAR', false, 25);

		$tMap->addColumn('COURSE_IN_THE_BONES', 'CourseInTheBones', 'VARCHAR', false, 25);

		$tMap->addColumn('CPCC_CERT_DATE', 'CpccCertDate', 'DATE', false, null);

		$tMap->addColumn('CPCC_GRAD', 'CpccGrad', 'VARCHAR', false, 25);

		$tMap->addColumn('COURSE_CERTIFICATION', 'CourseCertification', 'VARCHAR', false, 25);

		$tMap->addColumn('CTI_FACULTY', 'CtiFaculty', 'VARCHAR', false, 25);

		$tMap->addColumn('ACTIVE', 'Active', 'VARCHAR', false, 25);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // StudentMapBuilder
