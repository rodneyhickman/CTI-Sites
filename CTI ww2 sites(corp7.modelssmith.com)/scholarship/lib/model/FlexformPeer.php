<?php

require 'lib/model/om/BaseFlexformPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'flexform' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Tue May 21 23:13:43 2013
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class FlexformPeer extends BaseFlexformPeer {

  public static function retrieveByName( $name ){
    $c = new Criteria();
    $c->add(FlexformPeer::NAME, $name);
    $flexform = FlexformPeer::doSelectOne( $c );
    return $flexform;
  }


  public static function getActiveForms(){
    $c = new Criteria();
    $c->add(FlexformPeer::EXTRA1, 1);
    $flexforms = FlexformPeer::doSelect( $c );

    return $flexforms;
  }

  public static function newFormFromSections( $formname, $sections ){
    $flexform = new FlexForm();
    $flexform->setName( $formname );
    $flexform->setTitle( $formname );
    $flexform->save();

    foreach($sections as $section){ // for now, this is not recursive
      $question = FlexformQuestionPeer::newFromArray( $flexform, $section ); // recursive
      if(!is_object($question)){
        $flexform->delete(); // cascade delete all questions of this form
        $error = $question; // string
        return $error; // use is_object($flexform) to determine if object or error string
      }
    }

    return $flexform;
  }

  public static function getActiveFORL() {
    $c = new Criteria();
    $c->add(FlexformPeer::EXTRA2, 'FORL');
    $c->addDescendingOrderByColumn(FlexformPeer::ID);
    $flexform = FlexformPeer::doSelectOne( $c );

    return $flexform;
  }

} // FlexformPeer
