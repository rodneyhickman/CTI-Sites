<?php


/**
 * This class defines the structure of the 'medical' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Fri Nov 11 20:47:00 2011
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class MedicalTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.MedicalTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('medical');
		$this->setPhpName('Medical');
		$this->setClassname('Medical');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addForeignKey('PROFILE_ID', 'ProfileId', 'INTEGER', 'profile', 'ID', false, null, null);
		$this->addColumn('HEIGHT', 'Height', 'LONGVARCHAR', false, null, null);
		$this->addColumn('WEIGHT', 'Weight', 'LONGVARCHAR', false, null, null);
		$this->addColumn('CONDITIONS_PHYSICAL', 'ConditionsPhysical', 'LONGVARCHAR', false, null, null);
		$this->addColumn('CONDITIONS_PSYCHOLOGICAL', 'ConditionsPsychological', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ACCOMMODATIONS', 'Accommodations', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HEAD', 'Head', 'LONGVARCHAR', false, null, null);
		$this->addColumn('NECK', 'Neck', 'LONGVARCHAR', false, null, null);
		$this->addColumn('WHIPLASH', 'Whiplash', 'LONGVARCHAR', false, null, null);
		$this->addColumn('SHOULDERS', 'Shoulders', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ARMS', 'Arms', 'LONGVARCHAR', false, null, null);
		$this->addColumn('WRISTS', 'Wrists', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HANDS', 'Hands', 'LONGVARCHAR', false, null, null);
		$this->addColumn('UPPER_BACK', 'UpperBack', 'LONGVARCHAR', false, null, null);
		$this->addColumn('LOWER_BACK', 'LowerBack', 'LONGVARCHAR', false, null, null);
		$this->addColumn('PELVIS', 'Pelvis', 'LONGVARCHAR', false, null, null);
		$this->addColumn('GROIN', 'Groin', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DISLOCATIONS', 'Dislocations', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DISLOCATIONS_WHERE', 'DislocationsWhere', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ASTHMA', 'Asthma', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DO_YOU_SMOKE', 'DoYouSmoke', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HAVE_YOU_EVER_SMOKED', 'HaveYouEverSmoked', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ARE_YOU_CURRENTLY_PREGNANT', 'AreYouCurrentlyPregnant', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DUE_DATE', 'DueDate', 'DATE', false, null, null);
		$this->addColumn('LOWER_LEGS', 'LowerLegs', 'LONGVARCHAR', false, null, null);
		$this->addColumn('THIGHS', 'Thighs', 'LONGVARCHAR', false, null, null);
		$this->addColumn('KNEES', 'Knees', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ANKLES', 'Ankles', 'LONGVARCHAR', false, null, null);
		$this->addColumn('FEET', 'Feet', 'LONGVARCHAR', false, null, null);
		$this->addColumn('INTERNAL_ORGANS', 'InternalOrgans', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HEART', 'Heart', 'LONGVARCHAR', false, null, null);
		$this->addColumn('LUNGS', 'Lungs', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EARS', 'Ears', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EYES', 'Eyes', 'LONGVARCHAR', false, null, null);
		$this->addColumn('CONTACT_LENSES', 'ContactLenses', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DIZZINESS', 'Dizziness', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HIGH_BLOOD_PRESSURE', 'HighBloodPressure', 'LONGVARCHAR', false, null, null);
		$this->addColumn('HEART_ATTACK', 'HeartAttack', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DIABETES', 'Diabetes', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EPILEPSY_SEIZURES', 'EpilepsySeizures', 'LONGVARCHAR', false, null, null);
		$this->addColumn('OTHER_SERIOUS_ILLNESS', 'OtherSeriousIllness', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXPLANATION', 'Explanation', 'LONGVARCHAR', false, null, null);
		$this->addColumn('ALLERGIES', 'Allergies', 'LONGVARCHAR', false, null, null);
		$this->addColumn('MEDICATIONS', 'Medications', 'LONGVARCHAR', false, null, null);
		$this->addColumn('NAME_OF_MEDICATIONS', 'NameOfMedications', 'LONGVARCHAR', false, null, null);
		$this->addColumn('WHAT_ARE_MEDICATIONS_FOR', 'WhatAreMedicationsFor', 'LONGVARCHAR', false, null, null);
		$this->addColumn('MEDICATION_DOSAGES', 'MedicationDosages', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EMERGENCY_CONTACT_NAME', 'EmergencyContactName', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EMERGENCY_RELATIONSHIP', 'EmergencyRelationship', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EMERGENCY_ADDRESS', 'EmergencyAddress', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EMERGENCY_WORK_PHONE', 'EmergencyWorkPhone', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EMERGENCY_HOME_PHONE', 'EmergencyHomePhone', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EMERGENCY_OTHER_PHONE', 'EmergencyOtherPhone', 'LONGVARCHAR', false, null, null);
		$this->addColumn('COVERAGE_PROVIDER', 'CoverageProvider', 'LONGVARCHAR', false, null, null);
		$this->addColumn('POLICY_NUMBER', 'PolicyNumber', 'LONGVARCHAR', false, null, null);
		$this->addColumn('OTHER_INSURANCE_INFORMATION', 'OtherInsuranceInformation', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DOCTORS_NAME', 'DoctorsName', 'LONGVARCHAR', false, null, null);
		$this->addColumn('DOCTORS_CONTACT_INFO', 'DoctorsContactInfo', 'LONGVARCHAR', false, null, null);
		$this->addColumn('RELEASE_OF_LIABILITY', 'ReleaseOfLiability', 'LONGVARCHAR', false, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('EXTRA1', 'Extra1', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA2', 'Extra2', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA3', 'Extra3', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA4', 'Extra4', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA5', 'Extra5', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA6', 'Extra6', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA7', 'Extra7', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA8', 'Extra8', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA9', 'Extra9', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA10', 'Extra10', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA11', 'Extra11', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA12', 'Extra12', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA13', 'Extra13', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA14', 'Extra14', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA15', 'Extra15', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA16', 'Extra16', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA17', 'Extra17', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA18', 'Extra18', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA19', 'Extra19', 'LONGVARCHAR', false, null, null);
		$this->addColumn('EXTRA20', 'Extra20', 'LONGVARCHAR', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Profile', 'Profile', RelationMap::MANY_TO_ONE, array('profile_id' => 'id', ), 'CASCADE', null);
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // MedicalTableMap
