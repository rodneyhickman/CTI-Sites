<?php

require 'lib/model/om/BaseCertificationPeer.php';


/**
 * Skeleton subclass for performing query and update operations on the 'certification' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Jul 20 17:57:22 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class CertificationPeer extends BaseCertificationPeer {

  public static function getDates() {
    $c = new Criteria();
    $c->add(CertificationPeer::MONTH_TO_BEGIN, null, Criteria::ISNOTNULL);
    $certs = CertificationPeer::doSelect( $c );
    
    $list = array( );
    $seen = array( );
    foreach($certs as $cert){
      $month = $cert->getMonthToBegin();
      if(!isset($seen[$month])){
        $seen[$month] = 1;
        array_push($list, $month);
      }
    }

    return $list;
  }

  public static function certificationMonthOptions() {


    // months to consider are 0 .. 10
    $months = array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November');

// get local month and year
    $mn  = date("n") - 1; // January = 0 
    $yr  = date("Y"); 
    $day = date("d"); 




    $month_select = array( );
    $year = $yr;

    $months_ahead = ($mn > 9) ? 1 : 2;
    // after october, then do just one month ahead because we are not including december in @months
    // array. This will mean that Jan will be first month in list during october and november

    // subtract a month if today is the first of the month
    $months_ahead -= ($day == 1) ? 1 : 0;

  
    // create list
    for ($i=0; $i<8; $i++) {
    $mon = $mn + $i + $months_ahead;

    // if mon > 10, then subtract 11 so that month array index does not go out of bounds
    if ($mon > 10) {
      $year = $yr + 1;
      $mn -= 11;
      $mon -= 11;
    }
    array_push ($month_select,$months[$mon]." ".$year);

    }

    

    return $month_select;
  }

} // CertificationPeer
